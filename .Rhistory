shiny::runApp()
require(shiny)
require(shinyWidgets)
require(shinydashboard)
require(tidyverse)
require(lubridate)
require(magrittr)
require(ggalluvial)
require(highcharter)
require(tmap)
require(sf)
require(tidyterra)
require(terra)
runApp()
runApp()
shiny::runApp()
remove.packages("wior")
devtools::install_github("lugoga/wior")
y
chl=wior::get_chlModis(lon.min = 38.5, lon.max = 40, lat.min = -6, lat.max = -5, t1 = "2018-01-01", t2 = "2018-03-30",level = 3)
require(magrittr)
chl=wior::get_chlModis(lon.min = 38.5, lon.max = 40, lat.min = -6, lat.max = -5, t1 = "2018-01-01", t2 = "2018-03-30",level = 3)
shiny::runApp()
remove.packages("wior")
devtools::install_github("lugoga/wior")
require(tidyverse)
require(rerddap)
chla =rerddap::griddap("erdMH1chlamday",
latitude =  c(-11, -3),
longitude = c(38, 45),
time = c("2020-01-30", "2021-12-30"),
fmt = "csv")
chla
chla
chla %>%
mutate(time = as.Date(time))
chla %>%
mutate(time = as_date(time))
chla %>%
mutate(date = as_date(time))
chla %>%
mutate(time = as_date(time))
chla %>%
mutate(time = lubridate::as_date(time))
chla %>%
mutate(time = lubridate::as_date(time))
chla %>%
mutate(time = lubridate::ymd(time))
chla %>%
mutate(time = chla$mdy(time)))
chla %>%
mutate(time = chla$mdy(time))
require(tidyverse)
require(rerddap)
require(lubridate)
rerddap::ed_search(query = "modis")
chla =rerddap::griddap("erdMH1chlamday",
latitude =  c(-11, -3),
longitude = c(38, 45),
time = c("2020-01-30", "2021-12-30"),
fmt = "csv")
chla
mutate(time = as_date(time)
chla %>%
chla %>%
mutate(time = as_date(time))
chla %>%
mutate(date = dmy(time))
glimpse(chla)
chla$time
names(chla)
names(chla)
chla |<
chla >|
chla |>
mutate(date = dmy(time))
glimpse(chla)
chla %>%
mutate(date = ymd(time))
chla %>%
filter(time == "2020-01-16T00:00:00Z")
chla %>%
filter(time == "2020-01-16T00:00:00Z")
chla %>%
filter(time == "2020-01-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour2()
chla %>%
filter(time == "2020-01-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()
chla %>%
filter(time == "2020-01-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A())
chla %>%
filter(time == "2020-01-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120))
install.packages("scales")
install.packages("scales")
chla %>%
filter(time == "2020-01-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())
chla %>%
filter(time == "2020-01-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41))
chla %>%
filter(time == "2020-01-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-10,-4))
chla %>%
filter(time == "2020-01-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2020-02-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2020-03-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2020-04-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2020-05-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2020-06-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2020-07-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2020-05-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2020-08-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2021-08-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-4))
chla %>%
filter(time == "2021-08-16T00:00:00Z") %>%
ggplot(aes(x = longitude, y = latitude, z = chlorophyll))+
metR::geom_contour_fill()+
scale_fill_gradientn(colours = oce::oceColors9A(120), trans = scales::log10_trans())+
coord_equal(xlim = c(38,41),
ylim = c(-8,-7))
lubridate::today()
lubridate::now()
lubridate::today()
chla %>%
mutate(time = as.Date(time))
chla %>%
mutate(date = lubridate::as_date(time))
chla %>%
class()
chla %>%
class(x = time)
chla %>%
is.Date(time)
chla %>%
as_tibble()
chla %>%
as_tibble() %>%
is.Date(time)
chla %>%
as_tibble() %>%
mutate(date = as_date(time))
chla %>%
as_tibble() %>%
mutate(time = as_date(time))
shiny::runApp()
runApp()
runApp()
require(shiny)
require(shinyWidgets)
require(shinydashboard)
require(tidyverse)
require(lubridate)
require(magrittr)
require(ggalluvial)
require(highcharter)
require(tmap)
require(sf)
require(tidyterra)
require(terra)
require(rerddap)
shiny::runApp()
runApp()
shiny::runApp()
wior::get_chlModis(lon.min = 5,
lon.max = 9,
lat.min = -8,
lat.max = -5,
t1 = "2020-01-01",
t2 = "2020-12-31",
level = 3)
cc = wior::get_chlModis(lon.min = 5,
lon.max = 9,
lat.min = -8,
lat.max = -5,
t1 = "2020-01-01",
t2 = "2020-12-31",
level = 3)
cc
runApp()
runApp()
input$lon_id[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
mm = wior::get_rainLand(lon.min = 32,lon.max = 35,lat.min = -9,lat.max = -1,t1 = "1990-01-01", t2 = "2020-12-31",level = 3)
mm
shiny::runApp()
